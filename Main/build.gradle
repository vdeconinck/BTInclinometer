apply plugin: 'com.android.application'

// Load keystore
def localPropertiesFile = rootProject.file("local.properties");
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias        localProperties['keyAlias']
            keyPassword     localProperties['keyPassword']
            storeFile       file("../" + localProperties['storeFile'])
            storePassword   localProperties['storePassword']
        }
    }
    compileSdk 33

    buildToolsVersion '31.0.0'


    defaultConfig {
        applicationId "info.deconinck.inclinometer"
        // Seicane is Android 10 => SDK 29
        minSdk 29

        targetSdk 33
        versionCode 1
        versionName "1.0"
        resConfigs 'en'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
        debug {

            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.room:room-common:2.4.2'

    def room_version = "2.5.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

//            // To use Kotlin annotation processing tool (kapt)
//            kapt "androidx.room:room-compiler:$room_version"
//            // To use Kotlin Symbol Processing (KSP)
//            ksp "androidx.room:room-compiler:$room_version"
//
//            // optional - RxJava2 support for Room
//            implementation "androidx.room:room-rxjava2:$room_version"
//
//            // optional - RxJava3 support for Room
//            implementation "androidx.room:room-rxjava3:$room_version"
//
//            // optional - Guava support for Room, including Optional and ListenableFuture
//            implementation "androidx.room:room-guava:$room_version"
//
//            // optional - Test helpers
//            testImplementation "androidx.room:room-testing:$room_version"
//
//            // optional - Paging 3 Integration
//            implementation "androidx.room:room-paging:$room_version"

}
